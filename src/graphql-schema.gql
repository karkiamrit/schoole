# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  avatar: Float!
  email: String!
  password: String!
  phone: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetManyInput {
  """count or data or all, default = data"""
  dataType: String

  """
  {key: "ASC" or "DESC" or "asc" or "desc" or 1 or -1} or {key: {direction: "ASC" or "DESC" or "asc" or "desc", nulls: "first" or "last" or "FIRST" or "LAST"}}}
  """
  order: JSON
  pagination: IPagination
  where: JSON
}

input GetOneInput {
  where: JSON!
}

type GetUserType {
  count: Float
  data: [User!]
}

input IPagination {
  """Started from 0"""
  page: Int!

  """Size of page"""
  size: Int!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type JwtWithUser {
  jwt: String!
  user: User!
}

type Mail {
  created_at: DateTime!
  html_content: String!
  id: ID!
  name: String!
  subject: String!
  text_content: String!
  updated_at: DateTime!
}

type Mutation {
  SignUp(input: SignUpInput!): User!
  createManyUsers(input: [CreateUserInput!]!): [User!]!
  createUser(input: CreateUserInput!): User!
  deleteUser(id: Float!): JSON!
  forgotPassword(email: String!): Boolean!
  logout(accessToken: String!): Boolean!
  requestOtpVerify(email: String!, otpType: String!): Boolean!
  resetPassword(newPassword: String!, token: String!): Boolean!
  signIn(input: SignInInput!): JwtWithUser!
  updateMe(input: UpdateUserInput!): User!
  updateUser(id: Float!, input: UpdateUserInput!): User!
  verifyEmail(email: String!, otpCode: String!): Boolean!
}

type Query {
  getManyUsers(input: GetManyInput): GetUserType!
  getMe: User!
  getOneUser(input: GetOneInput!): User!
}

"""The basic roles of users"""
enum Role {
  admin
  user
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  avatar: Float
  email: String!
  password: String!
  phone: String
  username: String!
}

input UpdateUserInput {
  avatar: Float
  email: String
  password: String
  phone: String
  username: String
}

type User {
  created_at: DateTime!
  email: String!
  email_verified: Boolean!
  id: ID!
  phone: String!
  role: Role!
  updated_at: DateTime!
  username: String!
}